#!/bin/bash

echo "Configuring SWL..."

backend=none
context=EGL
prefix=/usr
host=
cfg=release
lib_extension=

# Parse command line parameters

function check_arg {
	if [[ "${arg}+" == "+" ]]; then
		echo "Parameter $cmd requires an argument."; 
		exit 1
	fi
}

until [ -z "$1" ]; do
	index=`expr index "$1" =`
	arg=
	if [[ "$index" == "0" ]]; then
		cmd=$1
	else
		cmd=${1:0:$(expr $index - 1)}
		arg=${1:$index}
	fi
	
	shift; 
	
	case $cmd in
		"--prefix") check_arg || exit 1; prefix="$arg";;
		"--host") check_arg || exit 1; host="$arg";;
		"--debug") cfg=debug;;
		"--enable-egl") context=EGL;;
		"--enable-wgl") context=WGL;;
		*) echo "Unknown command line option: '$1'"; exit 1;;
	esac
done

echo "Building $cfg configuration"

if [[ "${host}+" == "+" ]]; then
	echo " - Using default toolchain"
else
	echo " - Using toolchain: $host"
	host=${host}-
fi

C_FEATURES=include/swl-features.h
MAKE_FEATURES=Makefile.autoconf
CC=${host}gcc

echo "" > $C_FEATURES
echo "" > $MAKE_FEATURES

echo "INSTALL_PREFIX=$prefix" >> $MAKE_FEATURES
echo "CROSS_COMPILE=$host" >> $MAKE_FEATURES
echo "CFG=$cfg" >> $MAKE_FEATURES

function test_code {
	((echo $1 | ${CC} -fsyntax-only -x c - &> /dev/null) && echo 1) || echo 0
}

function test_header {
	test_code "#include <$1>"
}

function output_option {
	if [[ "$2" == "1" ]]; then
		echo "#define $1" >> $C_FEATURES
		echo "$1=1" >> $MAKE_FEATURES
		eval $3
		return 0
	else
		return 1;
	fi
}

if [[ $(test_code "#define TEST") == "0" ]]; then
	echo "Unable to find a suitable C89 compiler to use!"; exit 1
fi

output_option SWL_BACKEND_WINAPI $(test_header "windows.h") "backend=WINAPI; lib_extension=.dll" ||
output_option SWL_BACKEND_XLIB $(test_header "X11/Xlib.h") "backend=XLIB; lib_extension=.so"

if [[ "$backend" == "none" ]]; then
	echo "Unable to find a suitable window backend for SWL!"; exit 1
fi

output_option "SWL_CONTEXT_${context}" 1
echo "LIB_EXT=$lib_extension" >> $MAKE_FEATURES

if [[ "$lib_extension" == ".dll" ]]; then
    echo "LDFLAGS += -Wl,--out-implib=$cfg/libswl.dll.a -Wl,--export-all-symbols" >> $MAKE_FEATURES
fi

echo " - Using window backend: $backend"
echo " - Using context backend: $context"
echo " - Installing in directory: $prefix"

echo "Use make to build!"
